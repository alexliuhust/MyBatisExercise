<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.alexSpring.po.Customer">

	<!-- <cache></cache> -->
	
	<!-- Define common sql fragment to avoid duplicated codes -->
	<sql id="customerColumn">id, username, jobs, phone</sql>

	<select id="findCustomerById" parameterType="Integer"
		resultType="com.alexSpring.po.Customer">
		select <include refid="customerColumn"></include> from t_customer 
		where id = #{id}
	</select>

	<select id="findCustomerByName" parameterType="String"
		resultType="com.alexSpring.po.Customer">
		<!-- select * from t_customer where username like '%${value}%' -->
		<!-- To avoid the illegal SQL injection issue from the line right above, 
			we replace ${value} with concat() -->
		select <include refid="customerColumn"></include> from t_customer 
		where username like concat('%', #{username}, '%')
	</select>

	<insert id="addCustomer" parameterType="com.alexSpring.po.Customer" 
		keyProperty="id" useGeneratedKeys="true">
		insert into t_customer(username, jobs, phone) 
		values(#{username},#{jobs},#{phone})
	</insert>

	<update id="updateCustomerById"
		parameterType="com.alexSpring.po.Customer">
		update t_customer 
		set username = #{username}, jobs = #{jobs}, phone = #{phone} 
		where id = #{id}
	</update>

	<delete id="deleteCustomerById" parameterType="Integer">
		delete from t_customer 
		where id = #{id}
	</delete>




</mapper>
